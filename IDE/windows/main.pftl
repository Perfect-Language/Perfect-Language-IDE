// default includes

include windows;
include windows.clock;
include windows.console;
include windows.date;
include windows.file;
include windows.gui;
include windows.thread;

include "./datas/datas.json";


// default vars

int datasJsonFile = file.read("./datas/datas.json", "utf-8", datasJsonFileError);


// main namespace

namespace main() {
    
    int datas() {
        
        string appAuthor = file.read(datasJsonFile.app.appAuthor, "utf-8", appAuthorError);
        string appName = file.read(datasJsonFile.app.appName, "utf-8", appNameError);
        string appVersion = file.read(datasJsonFile.app.appVersion, "utf-8", appVersionError);
        int consoleMaxLines = file.read(datasJsonFile.console.maxLines, "utf-8", consoleMaxLinesError);
        int ideBlackThemeBackgroundColor = file.read(datasJsonFile.gui.ideBlackThemeBackgroundColor, "utf-8", ideBlackThemeBackgroundColorError);
        int ideGuiTheme = file.read(datasJsonFile.gui.theme, "utf-8", ideGuiThemeError);
        int ideGuiXSize = file.read(datasJsonFile.gui.ideGuiXSize, "utf-8", ideGuiXSizeError);
        int ideGuiYSize = file.read(datasJsonFile.gui.ideGuiYSize, "utf-8", ideGuiYSizeError);
        int ideWhiteThemeBackgroundColor = file.read(datasJsonFile.gui.ideWhiteThemeBackgroundColor, "utf-8", ideWhiteThemeBackgroundColorError);
        
    };
    int ide() {
        
        GUI ideGui = new GUI(datas.ideGuiXSize, datas.ideGuiYSize);
        CONSOLE ideConsole = new CONSOLE(datas.ideConsoleMaxLines);
        ideConsole.maxLines = datas.consoleMaxLines;
        ideGui.windowAuthor = datas.appAuthor;
        ideGui.windowName = datas.appName;
        ideGui.windowVersion = datas.appVersion;
        if(datas.ideGuiTheme = 0) {
            
            ideGui.backgroundColor = datas.ideWhiteThemeBackgroundColor;
            
        } else {
            
            if (datas.ideGuiTheme = 1) {
                
                ideGui.backgroundColor = datas.ideBlackThemeBackgroundColor;
                
            } else {
                
                ideConsole.write("Error in the theme number !");
                
            };
            
        };
        
    };
    int internet() {
        
        INTERNET internetClient = new INTERNET(datas.internetClientAddress, datas.internetClientPort, datas.internetClientName, internetClientError);
        int internetClientConnected = internetClient.connect("tcp", "192...", 40000);
        
    };
    int Main() {
        
        void run() {
            
            
            
        };
        void stop() {
            
            ide.ideConsole.Write("Stopping the IDE !");
            
        };
        
    };
    int thread() {
        
        
        
    };
    
};
